name: Storybook

# Only one workflow can run at a time
# If there is newer workflow in progress, cancel older ones
concurrency:
  group: storybook
  cancel-in-progress: true

# Put 'on' in quotes to avoid YAML parsing error
"on":
  # Enable manual triggering
  workflow_dispatch: {}
  # Run on commits to main branch
  push:
    branches:
      - main
    # Run only on changes to relevant files
    paths:
      - .github/workflows/storybook.yaml
      - .storybook/**
      - src/**
      - stories/**
      - flake.lock
      - "*.nix"
      - package-lock.json
      - package.json
      - postcss.config.mjs
      - rslib.config.mts
      - Taskfile.dist.yaml
      - tsconfig.json

jobs:
  build:
    name: Build storybook
    # Pin version of Ubuntu to avoid breaking changes
    runs-on: ubuntu-24.04
    # Use reasonable timeout to avoid stuck workflows
    timeout-minutes: 10
    env:
      NIX_CACHE_DIR: /home/runner/.nixcache/
    permissions:
      # Needed to checkout code
      contents: read
      # Needed to upload page artifact
      pages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup Nix cache
        uses: actions/cache@v4.2.1
        id: cache-nix
        with:
          path: ${{ env.NIX_CACHE_DIR }}
          key: storybook-nix
      - name: Setup modules cache
        uses: actions/cache@v4.2.1
        with:
          path: node_modules/
          key: storybook-modules
      - name: Install Nix
        uses: cachix/install-nix-action@v30
        with:
          github_access_token: ${{ github.token }}
          install_url: https://releases.nixos.org/nix/nix-2.26.2/install
      # See: https://github.com/cachix/install-nix-action/issues/56
      - name: Import Nix store cache
        if: steps.cache-nix.outputs.cache-hit == 'true'
        run: >
          nix-store
          --import
          < ${{ env.NIX_CACHE_DIR }}/archive.nar
      - name: Build storybook
        run: >
          nix
          develop
          ./#storybook
          --command
          --
          task
          storybook
          --
          build
          --output-dir
          .storybook/build/
      - name: Setup Pages
        uses: actions/configure-pages@v5.0.0
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3.0.1
        with:
          path: .storybook/build/
      # See: https://github.com/cachix/install-nix-action/issues/56
      - name: Export Nix store cache
        if: "!cancelled()"
        run: >
          mkdir
          --parents
          ${{ env.NIX_CACHE_DIR }}
          &&
          nix-store
          --export $(find /nix/store/ -maxdepth 1 -name '*-*')
          > ${{ env.NIX_CACHE_DIR }}/archive.nar
  deploy:
    name: Deploy storybook
    # Run only if build job succeeded
    needs: build
    # Pin version of Ubuntu to avoid breaking changes
    runs-on: ubuntu-24.04
    # Use reasonable timeout to avoid stuck workflows
    timeout-minutes: 10
    # Use Pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      # Needed to to deploy to Pages
      pages: write
      # Also needed to deploy to Pages
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4.0.5
